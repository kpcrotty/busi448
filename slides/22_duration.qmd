---
title: 'Fixed Income: Duration'
author: "<br>Kevin Crotty<br>BUSI 448: Investments"
format: 
    revealjs:
        incremental: true
        logo: RiceLogo.png
        footer: "BUSI 448"
        self-contained: true
        code-fold: true
        theme: [default, custom.scss]
        show-slide-number: print
        menu: 
            width: wide
            numbers: true             
execute:
    echo: true
    freeze: auto
jupyter: python3
---
## Where are we?
**Last time**:

::: {.nonincremental}
- Equity asset pricing models
- Multifactor models
:::

. . . 

**Today**:

::: {.nonincremental}
- Interest rate risk
- Duration
:::

## Fixed Income Risks

- Interest rate risk
  - Duration  
  - Convexity 
- Credit risk
  - Leverage
  - Ratings
  - Credit default swaps
- Reinvestment risk

## Bond pricing refresher {.smaller}
$$ P = \frac{CF_1}{(1+y/m)}+\frac{CF_2}{(1+y/m)^2}+...+\frac{CF_T}{(1+y/m)^T} $$ 
- $m$: number of payments per year
- $y/m$: per period yield (i.e., the discount rate)


. . .

For bonds, the cash flows are usually fixed coupon payments, so this reduces to:
$$ P = \frac{C}{(1+y/m)}+\frac{C}{(1+y/m)^2}+...+\frac{C+FACE}{(1+y/m)^T}$$
where $C$ is the coupon payment of the bond.


## Duration defined {.smaller}

$$ P = \frac{C}{(1+DR)} + \frac{C}{(1+DR)^2}+ \frac{C}{(1+DR)^3}+ ... + \frac{C+FACE}{(1+DR)^T} $$

We can rewrite this as:
$$ P = PV(CF_{t_1}) + PV(CF_{t_2})+ PV(CF_{t_3})+ ... + PV(CF_{t_T}) $$
where $t_1$ is the time of the first cash-flow in years.  Now divide both sides by $P$:

$$ 1 = \frac{PV(CF_{t_1})}{P} + \frac{PV(CF_{t_2})}{P}+ \frac{PV(CF_{t_3})}{P}+ ... + \frac{PV(CF_{t_T})}{P} $$

. . . 

Each term on the RHS is a weight!


# Interest Rate Risk

## Duration defined {.smaller}

- Duration is a weighted-average time to cash flows.
- The weights are the fraction of the total PV (the price) that is due to the cash flows at each time.

. . . 

$$\text{duration}=\left[\frac{PV(CF_{t_1})}{P} \right] \cdot t_1 + \left[\frac{PV(CF_{t_2})}{P} \right] \cdot t_2 + ... + \left[\frac{PV(CF_{t_T})}{P} \right] \cdot t_T $$


## Duration visualized

``` {python}
import numpy as np
import pandas as pd
import numpy_financial as npf
import plotly.graph_objects as go

# Inputs
CR = 0.15           # annual coupon rate
YTM = 0.05          # annual yield
NOP= 1              # payments per year
PRINCIPAL = 100     # face value of the bond
TTM_PERIODS = 10


bond = pd.DataFrame(dtype=float,columns=['Time (years)', 'Cash Flow', 'PV(Cash Flow)','Fraction of PV', 'Time*Fraction'], index=1+np.arange(TTM_PERIODS))
bond['Time (years)'] = bond.index / NOP
bond.index.name = 'Period'
bond['Cash Flow'] = CR / NOP * PRINCIPAL
bond.loc[TTM_PERIODS,'Cash Flow'] = bond.loc[TTM_PERIODS,'Cash Flow'] + PRINCIPAL
bond['PV(Cash Flow)'] = bond['Cash Flow'] / (1+YTM/NOP)**bond.index

# Calculate each time period's contribution to overall price
price = bond['PV(Cash Flow)'].sum()
bond['Fraction of PV'] = bond['PV(Cash Flow)'] / price
bond['Time*Fraction'] = bond['Time (years)']*bond['Fraction of PV']

duration = bond['Time*Fraction'].sum()

# Plot PV weights of each time period
trace = go.Bar(x=bond['Time (years)'], y=bond['Fraction of PV'])
fig = go.Figure()
fig.add_trace(trace)
fig.update_xaxes(title='Time of CF (in years)',tickformat=".1f")
fig.update_yaxes(title='Fraction of Price',tickformat=".2f")
fig.add_vline(x=duration, line_width=4, line_dash="dash", line_color="black")
fig.show()

```


## What happens to duration as:

- Maturity increases
- Coupon rate increases


## Duration and the bond pricing function

``` {python}
def bondpv(cr,ytm,nop,ttm, principal):
    dr = ytm/nop
    c = cr/nop*principal
    p = -npf.pv(dr,ttm,c,principal)
    return p
def mduration(cr,ytm,nop,ttm, principal):
    dr = ytm/nop
    c = cr/nop*principal
    p = -npf.pv(dr,ttm,c,principal)
    # Write out CFs and discount
    cfs = c*np.ones(ttm)
    cfs[-1] = cfs[-1]+principal
    pvs = cfs/(1+dr)**(1+np.arange(ttm))
    # Calculate weights
    wgts = pvs / np.sum(pvs)
    t = (1+np.arange(ttm))/nop
    # Calculate duration
    duration = t @ wgts
    return duration / (1+dr)

# Inputs
CR  = 0.05          # annual coupon rate
YTM = 0.10          # annual yield to maturity
NOP = 1             # payments per year
PRINCIPAL = 100     # face value of the bond
TTM  = 40
DELTA_YIELDS    = np.arange(-0.02,0.025,0.005)
column_index = ['act_price','approx_price']
df = pd.DataFrame(dtype=float,columns=column_index,index=DELTA_YIELDS)
df.index.name='delta_ytm'

df['new_ytm'] = YTM + df.index
p0 = bondpv(CR,YTM,NOP,TTM,PRINCIPAL)
dmod = mduration(CR,YTM,NOP,TTM,PRINCIPAL)
for dy in df.index:
    df.loc[dy,'act_price'] = bondpv(CR,YTM+dy,NOP,TTM,PRINCIPAL)
    df.loc[dy,'approx_price'] = p0-dmod * dy * p0

# Plot the data
fig = go.Figure()
ttm_years = int(TTM/NOP)
trace_act=go.Scatter(x=df['new_ytm'], y=df['act_price'], mode='lines', name='Actual Price')
trace_approx=go.Scatter(x=df['new_ytm'], y=df['approx_price'], mode='lines', name='Approx Price')
fig.add_trace(trace_act)
fig.add_trace(trace_approx)

fig.update_xaxes(title='Yield',tickformat=".2%")
fig.update_yaxes(title='Bond Price',tickformat="$.2f")
fig.update_layout(title='Interest Rate Risk')
fig.update_layout(legend=dict(yanchor="top", y =0.99, xanchor="left", x=0.6))
fig.show()

```


## Duration is related to interest rate risk!

For a change in yield $y$ of $\Delta y$, the percent change in price is:
$$\frac{\Delta P}{P} \approx - \left[ \frac{\text{duration}}{1+DR} \right] \cdot \Delta y.$$

The term in brackets is **modified duration**.

. . . 

Alternatively, we can work in prices rather than returns:

$$ P_{\text{new}} \approx P_0 - P_0 \cdot \left[ \frac{\text{duration}}{1+DR} \right] \cdot \Delta y $$


## How good is this approximation?
Consider two bonds with

- Same YTM of 10%
- Same coupon rate of 5%
- Different maturities of 5 and 10 years

. . .

Let's look at how well the duration approximation works for different yield change magnitudes.

## Drawbacks of duration

- Duration is a linear approximation.
- It can be improved using curvature of pricing function (convexity).
- Also, price risk is not the only risk associated with rate changes.
  - reinvestment risk!

# Duration and reinvestment risk

## Consider a rate decline from 10% to 9%
``` {python}
# Plot the data
fig = go.Figure()
ttm_years = int(TTM/NOP)
trace_act=go.Scatter(x=df['new_ytm'], y=df['act_price'], mode='lines')
fig.add_trace(trace_act)

fig.update_xaxes(title='Yield',tickformat=".2%")
fig.update_yaxes(title='Bond Price',tickformat="$.2f")
fig.show()

```

## Reinvestment risk

The risk that interest payments cannot be reinvested at the same rate.

- If rates fall
  - bond prices rise
  - but the value of reinvested coupons falls.

. . . 

**When investment horizon matches duration, reinvestment risk and interest rate risk cancel out!**


## An example
- Suppose you need to pay out $X at year 5 (think of a pension company). 
- What is your investment strategy, using bonds, that ensures that you can meet your obligation?

- Best bet is to buy a zero-coupon bond maturing in 5 years
- If unavailable, buy a bond with duration of 5 years

## Duration tells us three very useful things

- Effective maturity of a bond
- Interest rate risk (sensitivity of bond prices to rate changes)
- Horizon at which interest rate risk and reinvestment risk cancel out


# For next time: Convexity

<br><br><br><br>

![](RiceLogo.png){fig-align="center"}

