---
title: 'Introduction'
author: "<br>Kevin Crotty<br>BUSI 448: Investments"
format: 
    revealjs:
        incremental: true
        logo: RiceLogo.png
        footer: "BUSI 448"
        self-contained: true
        code-fold: true
        theme: [default, custom.scss]
        show-slide-number: print
        menu: 
            width: wide
            numbers: true        
execute:
    echo: true
    freeze: auto
jupyter: python3
---

## Introduction


## This Course

- Finance
- Python

## Why Study Investments?

A very intellectually interesting field.

A potentially lucrative field.

Every one of us will (or maybe have already) faced savings problems where we need an understanding of investments.

Rice University faces this problem.  

## Why Python?

Python is open-source, so you'll be able to use it without cost down the road in your careers.

Python allows us to study data and models that would be cumbersome to evaluate in Excel.

## This Course

A mix of theory, data, and practice.

## The course website

Some of the course will use the BBCX investments library.

The pages demonstrate the tools we will be using.

- Can be used to solve problems.
- Should be used to help understand concepts and develop intuition.

## {background-iframe="http://bbcx-investments.com" background-interactive="True"}


## The textbook

- My colleagues and I are writing a bespoke textbook for this and other courses we teach.  It is available at:
http://mi.bbcx-investments.com/.


- If you want to diversify your reading list (and have time to spare!), the syllabus also provides relevant readings in a traditional Investments textbook by Bodie, Kane, and Marcus.



## Python resources

- I use both Jupyter notebooks (.ipynb) and the Spyder IDE to run Python files (.py), depending on what I'm working on.

- You are welcome to install Python on your machines and run everything yourself.

- Alternatively, you can use Python notebooks at mybinder.org to work with Python.

- In general, I will not be troubleshooting Python


## Python is useful for fetching data

- Stock price data (Yahoo Finance)

- Macroeconomic data (FRED)

- Investments data (Ken French Data Library)



## Python is useful for data analysis

- Summarizing data

- Data visualization













## Why study expected returns?

```{python}
#| echo: false
import plotly.graph_objects as go
import numpy as np

trace1= go.Scatter(
    x=np.arange(31), 
    y=1.08**np.arange(31),
    mode="lines",
    name="8%"
)

trace2 = go.Scatter(
    x=np.arange(31), 
    y=1.04**np.arange(31),
    mode="lines",
    name="4%"
)

fig = go.Figure()
fig.add_trace(trace1)
fig.add_trace(trace2)
string = "year %{x}<br>balance = $%{y:.2f}<extra></extra>"
fig.update_traces(hovertemplate=string)
fig.update_layout(
    template="none",
    xaxis_title="Year",
    yaxis_title="Account Balance",
    yaxis_tickprefix="$", 
    yaxis_tickformat=",.0f",
    legend=dict(
        yanchor="top", 
        y=0.99, 
        xanchor="left", 
        x=0.01
        )
)
fig.show()
```

## Some python
``` p
import numpy_financial as npf

r   = 0.04
nper= 30
pmt = 0
pv  = 1

fv = npf.fv(r, nper, -pmt, -pv)
print(f'${fv:0.2f}')

```

## What about saving every period?

- Let's assume we want to save $10,000 every year.
- Our initial balance is zero.
- How much would we have in 30 years?

## Annuity
```{python}
#| echo: false
import plotly.graph_objects as go
import numpy as np
import numpy_financial as npf

trace1= go.Scatter(
    x=np.arange(31), 
    y=np.array([npf.fv(0.08,n,-10000,0) for n in np.arange(31)]),
    mode="lines",
    name="8%"
)

trace2 = go.Scatter(
    x=np.arange(31), 
    y=np.array([npf.fv(0.04,n,-10000,0) for n in np.arange(31)]),
    mode="lines",
    name="4%"
)

fig = go.Figure()
fig.add_trace(trace1)
fig.add_trace(trace2)
string = "year %{x}<br>balance = $%{y:.2f}<extra></extra>"
fig.update_traces(hovertemplate=string)
fig.update_layout(
    template="none",
    xaxis_title="Year",
    yaxis_title="Account Balance",
    yaxis_tickprefix="$", 
    yaxis_tickformat=",.0f",
    legend=dict(
        yanchor="top", 
        y=0.99, 
        xanchor="left", 
        x=0.01
        )
)
fig.show()
```


## Saving for retirement





