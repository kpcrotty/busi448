---
title: 'Multifactor Models'
author: "<br>Kevin Crotty<br>BUSI 448: Investments"
format: 
    revealjs:
        incremental: true
        logo: RiceLogo.png
        footer: "BUSI 448"
        self-contained: true
        code-fold: true
        theme: [default, custom.scss]
        show-slide-number: print
        menu: 
            width: wide
            numbers: true             
execute:
    echo: false
    freeze: auto
jupyter: python3
---

## Where are we?
**Last time**:

::: {.nonincremental}
- The cross-section of expected stock returns
- Portfolio sorts
- Cross-sectional regression
:::

. . . 

**Today**:

::: {.nonincremental}
- Multifactor models
- Estimating expected returns
- Characteristic-based models
:::


# Multifactor models

## Expected returns

- We are interested in characterizing the risk premium for stocks $$ E[r] = r_f + \text{risk premium} $$
- Empirically, the CAPM fares poorly in this regard.
- Today, we will explore some alternatives.


## Fama-French 3-factor model {.smaller}

Motivated by the size and value anomalies, Fama and French argued for a three **factor** model.

<!-- $$\begin{align*} 
r_{i,t} - r_{f,t} = \alpha_i &+ \beta_i (r_{m,t} - r_{f,t}) \\
                              &+ s_i SMB_t  \\
                              &+ h_i HML_t + \varepsilon_{i,t} 
\end{align*} $$ -->
$$ R_{i,t} - R_{f,t} = \alpha_i + \beta_i (R_{m,t} - R_{f,t}) + s_i SMB_t + h_i HML_t + \varepsilon_{i,t} $$
- Size factor: SMB (Small Minus Big)
- Value factor: HML (High Minus Low)
- Widely used asset-pricing model for stocks and for evaluation of asset managers


## SMB and HML

Form 6 portfolios on size (mkt cap) and value (B/M ratio)

<!-- |------------------|------------------|------------------|------------------| -->
|                  | Low B/M                    | Medium B/M                 | High B/M               |
|------------------|:--------------------------:|:--------------------------:|:----------------------:|
|  Small           | Small growth               |                            | Small value            |
|  Large           | Large growth               |                            | Large value            |
<!-- |------------------|------------------|------------------|------------------| -->

- SMB: $(0.5\cdot SG + 0.5 \cdot SV) - (0.5\cdot LG + 0.5\cdot LV)$
- HML: $(0.5\cdot SV + 0.5 \cdot LV) - (0.5\cdot SG + 0.5\cdot LG)$


## SMB + HML cumulative returns

``` {python}
import pandas as pd
import numpy as np
from pandas_datareader import DataReader as pdr
import plotly.graph_objects as go

# Pull data
ff3 = pdr("F-F_Research_Data_Factors", "famafrench", start=1926)[0]

# Cumulative returns
cum_rets = ff3/100 +1 
vars = ['Mkt-RF', 'SMB', 'HML']
for v in vars:
    cum_rets[v] = cum_rets[v].cumprod()

# Plot cumulative returns
fig = go.Figure()
cum_rets.index = cum_rets.index.astype(str)
for v in vars:
    trace  = go.Scatter(x=cum_rets.index, y=cum_rets[v], mode="lines", name=v,
    hovertemplate= v + "<br>Date: %{x}<br>Accumulation: %{y:.0f}<extra></extra>")
    fig.add_trace(trace)
fig.update_layout(
    xaxis_title="Date",
    yaxis_title="Accumulation from $1",
    yaxis_tickformat=",.0f",
    width=1000,
    height=460,
    legend=dict(
        yanchor="top", 
        y=0.99, 
        xanchor="left", 
        x=0.01
    ),
    yaxis_type="log",
  )
fig.show()

```

## What are the CAPM alphas of HML and SMB?


$$ SMB_t = \alpha_{\text{SMB}} + \beta_{\text{SMB}} (R_{m,t} - R_{f,t}) + \varepsilon_{i,t} $$

$$ HML_t = \alpha_{\text{HML}} + \beta_{\text{HML}} (R_{m,t} - R_{f,t}) + \varepsilon_{i,t} $$

- Let's look at today's first notebook.
- Recall: non-zero alphas mean that the market portfolio is not mean-variance efficient
  - Investing in a portfolio of the market and a positive alpha portfolio leads to a higher Sharpe ratio.

## Momentum

- Consider sorting stocks based on their returns over the past year
- Call the top performers "winners"
- Call the bottom performers "losers"
- A portfolio that goes long "winners" and short "losers" outperforms
- This is known as a **momentum** strategy


## Momentum cumulative returns

``` {python}
# Pull momentum and merge
umd = pdr('F-F_Momentum_Factor','famafrench', start=1900)[0]/100
ff3 = ff3/100
ffc = ff3.merge(umd,how='inner', left_index=True,right_index=True)
ffc.columns = ['Mkt-RF', 'SMB', 'HML', 'RF', 'WML']

# Cumulative returns
cum_rets = ffc +1 
vars = ['Mkt-RF', 'WML']
for v in vars:
    cum_rets[v] = cum_rets[v].cumprod()

# Plot cumulative returns
fig = go.Figure()
cum_rets.index = cum_rets.index.astype(str)
for v in vars:
    trace  = go.Scatter(x=cum_rets.index, y=cum_rets[v], mode="lines", name=v,
    hovertemplate= v + "<br>Date: %{x}<br>Accumulation: %{y:.0f}<extra></extra>")
    fig.add_trace(trace)
fig.update_layout(
    xaxis_title="Date",
    yaxis_title="Accumulation from $1",
    yaxis_tickformat=",.0f",
    width=1000,
    height=460,
    legend=dict(
        yanchor="top", 
        y=0.99, 
        xanchor="left", 
        x=0.01
    ),
    yaxis_type="log",
  )
fig.show()

```

## Momentum alphas  {.smaller}

Can market risk exposure explain momentum?

$$ WML_t = \alpha_{\text{WML}} + \beta_{\text{WML}} (R_{m,t} - R_{f,t}) + \varepsilon_{i,t} $$

. . .

What about the size and value factors?

$$ WML_t = \alpha_{\text{WML}} + \beta_{\text{WML}} (R_{m,t} - R_{f,t}) + s_{\text{WML}} SMB_t + h_{\text{WML}} HML_t + \varepsilon_{i,t} $$


## Fama-French-Carhart model {.smaller}

The FFC model augments the Fama-French-Carhart model with a momentum factor.

$$ r_{i,t} - r_{f,t} = \alpha_i + \beta_i (r_{m,t} - r_{f,t}) + s_i SMB_t + h_i HML_t + m_i WML_t+ \varepsilon_{i,t} $$
- Size factor: SMB (Small Minus Big)
- Value factor: HML (High Minus Low)
- Momentum factor: WML (Winners Minus Losers)


## Fama-French 5-factor model  {.smaller}

- Industrious researchers have continued to generate firm characteristics that correlate with ex post performance.
- Recently, Fama and French have argued for the following model:$$\begin{align*} 
R_{i,t} - R_{f,t} = \alpha_i +& \beta_i (R_{m,t} - R_{f,t}) + s_i SMB_t + h_i HML_t \\
                              &+ r_i RMW_t + c_i CMA_t + \varepsilon_{i,t} 
\end{align*}$$

- Size factor: SMB (Small Minus Big)
- Value factor: HML (High Minus Low)
- Operating profitability factor: RMW (Robust Minus Weak)
- Investment factor: CMA (Conservative Minus Aggressive)


## RMW + CMA cumulative returns {.smaller}

``` {python}
# Pull data
ff5 = pdr("F-F_Research_Data_5_Factors_2x3", "famafrench", start=1964)[0]/100

# Cumulative returns
cum_rets = ff5 +1 
vars = ['Mkt-RF', 'RMW','CMA']
for v in vars:
    cum_rets[v] = cum_rets[v].cumprod()

# Plot cumulative returns
fig = go.Figure()
cum_rets.index = cum_rets.index.astype(str)
for v in vars:
    trace  = go.Scatter(x=cum_rets.index, y=cum_rets[v], mode="lines", name=v,
    hovertemplate= v + "<br>Date: %{x}<br>Accumulation: %{y:.0f}<extra></extra>")
    fig.add_trace(trace)
fig.update_layout(
    xaxis_title="Date",
    yaxis_title="Accumulation from $1",
    yaxis_tickformat=",.0f",
    width=1000,
    height=460,
    legend=dict(
        yanchor="top", 
        y=0.99, 
        xanchor="left", 
        x=0.01
    ),
    yaxis_type="log",
  )
fig.show()

```

(Data starts in the 1960s due to availability of accounting information.)

## What are the CAPM alphas of HML and SMB?


$$ RMW_t = \alpha_{\text{RMW}} + \beta_{\text{RMW}} (R_{m,t} - R_{f,t}) + \varepsilon_{i,t} $$

$$ CMA_t = \alpha_{\text{CMA}} + \beta_{\text{CMA}} (R_{m,t} - R_{f,t}) + \varepsilon_{i,t} $$


# Expected return estimates
## Factor models and E[r] estimates

- For a given stock, we need three ingredients to construct an expected return estimate.

1. Factor loadings ($\beta_i, s_i, h_i, r_i, c_i$)
2. Factor risk premia ($\lambda_{\text{mkt}}$, $\lambda_{\text{smb}}$, $\lambda_{\text{hml}}$, $\lambda_{\text{rmw}}$, $\lambda_{\text{cma}}$)
3. The risk-free rate

- We have previously discussed the market risk premium.
- Now we want to estimate the other risk premiums
  - we can use the time-series average return of their respective long-short portfolio

## E[r] estimates {.smaller}

Using the estimated factor loadings and estimates of the factor risk permia, the factor model's estimate of expected returns is:

$$ E[R_i] = R_f + \hat{\beta}_i \hat{\lambda}_{\text{mkt}} + \hat{s}_i \hat{\lambda}_{\text{smb}} + \hat{h}_i \hat{\lambda}_{\text{hml}} + \hat{r}_i \hat{\lambda}_{\text{rmw}} + \hat{c}_i  \hat{\lambda}_{\text{cma}}$$

- Let's look at an example on the [website](https://learn-investments.org/factor-investing/ff-costequity)
- A notebook implementing this approach is on the [binder site](https://mybinder.org/v2/gh/kpcrotty/busi448_binder/HEAD)

# Characteristic regressions

## Fama-MacBeth cross-sectional approach

- We could also simply use the cross-sectional relationship between realized returns and lagged characteristics to characterize expected returns.
- We will use $N$ characteristics guided by the empirical record so far


## The procedure {.smaller}

1. Run cross-sectional regressions for 120 months of returns $$ R_{it}-R_{ft} = a_t + \sum_{j=1}^N b_{j,t}\cdot \text{characteristic}_{it-1} + e_{it}$$
2. Take average of each characteristic's time-series of $b_{jt}$s $$\overline{b}_{j}= \frac{1}{120} \sum_{t=1}^{120} b_{j,t}$$
3. Expected return estimate $\tau$ is: $$E[R_{i\tau}] = R_{f\tau} +  \overline{a} + \sum_{j=1}^N \overline{b}_{j} \cdot \text{characteristic}_{i\tau-1} $$

- Let's look at how to implement this


# For next time: Fixed Income: Duration

<br><br><br><br>

![](RiceLogo.png){fig-align="center"}