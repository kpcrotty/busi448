---
title: 'Saving for Retirement'
author: "<br>Kevin Crotty<br>BUSI 448: Investments"
format: 
    revealjs:
        incremental: true
        logo: RiceLogo.png
        footer: "BUSI 448"
        self-contained: true
        code-fold: true
        theme: [default, custom.scss]
        show-slide-number: print
        menu: 
            width: wide
            numbers: true        
execute:
    echo: true
    freeze: auto
jupyter: python3
---

# Saving for retirement

## Where are we?
**Last time**:

::: {.nonincremental}
- Capital Allocation: Risk-free + Risky
- Preferences over risk and return
- Optimal portfolios
:::

. . . 

**Today**:

::: {.nonincremental}
- Borrowing frictions
- Short-sales constraints
:::




## What about saving every period?

- Let's assume we want to save $10,000 every year.
- Our initial balance is zero.
- How much would we have in 30 years?

## Annuity
```{python}
#| echo: false
import plotly.graph_objects as go
import numpy as np
import numpy_financial as npf

trace1= go.Scatter(
    x=np.arange(31), 
    y=np.array([npf.fv(0.08,n,-10000,0) for n in np.arange(31)]),
    mode="lines",
    name="8%"
)

trace2 = go.Scatter(
    x=np.arange(31), 
    y=np.array([npf.fv(0.04,n,-10000,0) for n in np.arange(31)]),
    mode="lines",
    name="4%"
)

fig = go.Figure()
fig.add_trace(trace1)
fig.add_trace(trace2)
string = "year %{x}<br>balance = $%{y:.2f}<extra></extra>"
fig.update_traces(hovertemplate=string)
fig.update_layout(
    template="none",
    xaxis_title="Year",
    yaxis_title="Account Balance",
    yaxis_tickprefix="$", 
    yaxis_tickformat=",.0f",
    legend=dict(
        yanchor="top", 
        y=0.99, 
        xanchor="left", 
        x=0.01
        )
)
fig.show()
```



# Real and Nominal Cash Flows

##