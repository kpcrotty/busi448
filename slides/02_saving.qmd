---
title: 'Saving for Retirement'
author: "<br>Kevin Crotty<br>BUSI 448: Investments"
format: 
    revealjs:
        incremental: true
        logo: RiceLogo.png
        footer: "BUSI 448"
        self-contained: true
        code-fold: true
        theme: [default, custom.scss]
        show-slide-number: print
        menu: 
            width: wide
            numbers: true        
execute:
    echo: true
    freeze: auto
jupyter: python3
---

## Where are we?
**Last time**:

::: {.nonincremental}
- Course intro
- Bond pricing
- Basic Jupyter notebook
:::

. . . 

**Today**:

::: {.nonincremental}
- Saving for retirement
- Real and nominal cash flows and rates
:::

# Saving for retirement

## Future value of annuity savings

- Let's assume we want to save $10,000 every year.
- Our initial balance is zero.
- How much would we have in 30 years?
  - For 8% rate?
  - for 4% rate?

## Future value of annuity savings
```{python}
#| echo: false
import plotly.graph_objects as go
import numpy as np
import numpy_financial as npf

trace1= go.Scatter(
    x=np.arange(31), 
    y=np.array([npf.fv(0.08,n,-10000,0) for n in np.arange(31)]),
    mode="lines",
    name="8%"
)

trace2 = go.Scatter(
    x=np.arange(31), 
    y=np.array([npf.fv(0.04,n,-10000,0) for n in np.arange(31)]),
    mode="lines",
    name="4%"
)

fig = go.Figure()
fig.add_trace(trace1)
fig.add_trace(trace2)
string = "year %{x}<br>balance = $%{y:.2f}<extra></extra>"
fig.update_traces(hovertemplate=string)
fig.update_layout(
    template="none",
    xaxis_title="Year",
    yaxis_title="Account Balance",
    yaxis_tickprefix="$", 
    yaxis_tickformat=",.0f",
    legend=dict(
        yanchor="top", 
        y=0.99, 
        xanchor="left", 
        x=0.01
        )
)
fig.show()
```

## Two ways to tackle this problem

- Write out series of cash flows and compound
- Use `npf.fv` function 
  - `npf.fv(rate, n_periods, -pmt, -pv)`
- Let's try both in today's [notebook](https://mybinder.org/v2/gh/kpcrotty/busi448_binder/HEAD)


## The savings/retirement problem


- Suppose we'd like to withdraw $100,000 in each year of a 20-year retirement
- We'll save for 30 years
- Assume a rate of 5%.

. . .

**If we save a constant amount each year for 30 years, how much money will we need to invest each year?**

. . . 

A useful function: `npf.pmt`



# Saving for retirement with inflation
## Saving for retirement with inflation
- Now assume we consume a constant **real** amount in retirement
  - our standard of living will be unchanged each year
- Can finance with constant nominal or real saving
- Assume a nominal rate of 5% and inflation of 2% each year

. . .

**Q1: How much do we need to save each year if saving a constant real amount?**

. . . 

**Q2: How much do we need to save each year if saving a constant nominal amount?**


## Real and Nominal Cash Flows

What is the relationship between real and nominal cash flows at a point in time $t$?

. . . 

$$ \text{Nominal CF}_t = \text{Real CF}_t \cdot (1+\text{inflation})^t. $$

. . .

What does the above look like?

## Real and Nominal Discount Rates

What is the relationship between real and nominal rates?

. . .

$$ 1+ \text{nominal rate} = (1+\text{real rate})(1+\text{inflation}).$$

- Nominal cash flows are discounted/compounded using nominal rates.
- Real cash flows are discounted/compounded using real rates.


# Uncertain returns

## Simulating random returns

We can easily simulate random returns in Python

``` {.python}
from scipy.stats import norm
norm.rvs(loc=0.03, scale=0.1, size=50)
```

- What does the distribution of ending balances look like if we save $32,000 for 30 years (in real terms) and withdraw $100,000 for 20 years? (both in real terms)
  - Assume real returns are normally distributed with mean of 3% and standard deviation of 10%.
- How often do we run out of money?!?


## For next time: Returns, returns, and more returns...

<br><br><br><br>

![](RiceLogo.png){fig-align="center"}